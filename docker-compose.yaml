version: '3.8'

services:
  mongodb:
    image: mongo:4.2.20-rc0
    container_name: mongo
    restart: always
    ports:
      - '27017:27017'
    networks:
      - backend
  rabbitmq:
    image: rabbitmq:3.10.0-rc.1
    container_name: rabbitmq
    restart: always
    ports:
      - '5672:5672'
    env_file:
      - .env
    networks:
      - backend
  fastapi-app:
    build: ./app-fastapi
    container_name: fastapi-app
    restart: always
    volumes:
      - static_value:/app/static/
      - media_value:/app/media/
    env_file:
      - .env
    depends_on:
      - mongodb
      - rabbitmq
    networks:
      - backend
  celery:
    build:
      context: ./app-fastapi
    container_name: celery
    working_dir: /app/app-fastapi
    command: celery -A tasks worker -l info
    volumes:
      - .:/app
    links:
      - rabbitmq
    depends_on:
      - fastapi-app
    networks:
      - backend
  flower:
    build: ./app-fastapi
    container_name: flower
    working_dir: /app/app-fastapi
    command: celery flower
    volumes:
      - .:/app
    ports:
      - '5555:5555'
    environment:
      CELERY_BROKER_URL: ${RABBIT_BROKER}
      CELERY_RESULT_BACKEND: ${RABBIT_BACKEND}
    depends_on:
      - celery
    networks:
      - backend
  nginx:
    image: nginx:1.21.3-alpine
    container_name: nginx
    ports:
      - '80:80'
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - static_value:/var/html/static/
      - media_value:/var/html/media/
    depends_on:
      - fastapi-app
    networks:
      - backend

volumes:
  static_value:
  media_value:

networks:
  backend:
    driver: bridge
